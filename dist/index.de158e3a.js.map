{"mappings":"AAAA,IAAI,gBAAgB,SAAS,gBAAgB,CAAC;AAC9C,IAAI,cAAc,SAAS,gBAAgB,CAAC;AAE5C,qEAAqE;AACrE,MAAM,iBAAiB,IAAM,OAAO,UAAU,GAAG,KAAK,oBAAoB;AAE1E,MAAM,kBAAkB,CAAC;IACxB,cAAc,OAAO,CAAC,SAAU,MAAM;QACrC,YAAY,OAAO,CAAC,SAAU,IAAI;YACjC,IAAI,kBAAkB;gBACrB,yDAAyD;gBACzD,MAAM,YAAY,KAAK,4BAA4B;gBACnD,MAAM,YAAY,KAAK,4BAA4B;gBACnD,MAAM,iBAAiB,OAAO,WAAW;gBAEzC,MAAM,cAAc,MAAM,OAAO,GAAG,gBAAgB,uBAAuB;gBAC3E,MAAM,gBAAgB,KAAK,GAAG,CAC7B,WACA,KAAK,GAAG,CAAC,WAAW;gBAGrB,OAAO,KAAK,CAAC,IAAI,GAAG;gBACpB,KAAK,KAAK,CAAC,IAAI,GAAG,IAAI,eAAe,mCAAmC;YACzE,OAAO;gBACN,qDAAqD;gBACrD,MAAM,WAAW,KAAK,4BAA4B;gBAClD,MAAM,WAAW,KAAK,4BAA4B;gBAClD,MAAM,gBAAgB,OAAO,UAAU;gBAEvC,MAAM,cAAc,MAAM,OAAO,GAAG,eAAe,uBAAuB;gBAC1E,MAAM,eAAe,KAAK,GAAG,CAC5B,UACA,KAAK,GAAG,CAAC,UAAU;gBAGpB,OAAO,KAAK,CAAC,IAAI,GAAG;gBACpB,KAAK,KAAK,CAAC,IAAI,GAAG,IAAI,cAAc,mCAAmC;YACxE;QACD;IACD;AACD;AAEA,OAAO,gBAAgB,CAAC,aAAa","sources":["src/main.js"],"sourcesContent":["let figureElement = document.querySelectorAll(\".service figure\");\nlet textElement = document.querySelectorAll(\".service .text\");\n\n// Function to check if layout is column or row based on screen width\nconst isColumnLayout = () => window.innerWidth < 768; // Tablet breakpoint\n\nconst handleMouseMove = (event) => {\n\tfigureElement.forEach(function (figure) {\n\t\ttextElement.forEach(function (text) {\n\t\t\tif (isColumnLayout()) {\n\t\t\t\t// Column layout: adjust height based on mouse Y position\n\t\t\t\tconst maxHeight = 0.6; // Max proportion for figure\n\t\t\t\tconst minHeight = 0.4; // Min proportion for figure\n\t\t\t\tconst viewportHeight = window.innerHeight;\n\n\t\t\t\tconst mouseYRatio = event.clientY / viewportHeight; // Normalize Y position\n\t\t\t\tconst clampedHeight = Math.min(\n\t\t\t\t\tmaxHeight,\n\t\t\t\t\tMath.max(minHeight, mouseYRatio)\n\t\t\t\t);\n\n\t\t\t\tfigure.style.flex = clampedHeight;\n\t\t\t\ttext.style.flex = 1 - clampedHeight; // Ensure complementary flex values\n\t\t\t} else {\n\t\t\t\t// Row layout: adjust width based on mouse X position\n\t\t\t\tconst maxWidth = 0.6; // Max proportion for figure\n\t\t\t\tconst minWidth = 0.4; // Min proportion for figure\n\t\t\t\tconst viewportWidth = window.innerWidth;\n\n\t\t\t\tconst mouseXRatio = event.clientX / viewportWidth; // Normalize X position\n\t\t\t\tconst clampedWidth = Math.min(\n\t\t\t\t\tmaxWidth,\n\t\t\t\t\tMath.max(minWidth, mouseXRatio)\n\t\t\t\t);\n\n\t\t\t\tfigure.style.flex = clampedWidth;\n\t\t\t\ttext.style.flex = 1 - clampedWidth; // Ensure complementary flex values\n\t\t\t}\n\t\t});\n\t});\n};\n\nwindow.addEventListener(\"mousemove\", handleMouseMove);\n"],"names":[],"version":3,"file":"index.de158e3a.js.map","sourceRoot":"/__parcel_source_root/"}